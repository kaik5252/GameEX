package View;

import java.awt.CardLayout;
import java.awt.Toolkit;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import Control.PopUps;
import Model.DbConnection;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class View extends javax.swing.JFrame {

    private static final DbConnection dbConnection = new DbConnection();
    private Connection conn = null;
    private PreparedStatement pstm = null;
    private ResultSet res = null;

    public View() {
        initComponents();
        openCard("card1");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../resources/images/gameEX_icon.png")));

        JTableHeader header = tableRead.getTableHeader();
        header.setFont(new Font("Cambria", 0, 16));
        DefaultTableCellRenderer tableHeader = (DefaultTableCellRenderer) header.getDefaultRenderer();
        tableHeader.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer tableCell = new DefaultTableCellRenderer();
        tableCell.setHorizontalAlignment(SwingConstants.CENTER);
        tableRead.setCursor(new Cursor(12));
        tableRead.setRequestFocusEnabled(false);
        tableRead.setRowHeight(24);
        int colInit = 0;
        while (colInit < tableRead.getColumnModel().getColumnCount()) {
            tableRead.getColumnModel().getColumn(colInit).setCellRenderer(tableCell);
            colInit++;
        }
        readAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupBtnStatus = new javax.swing.ButtonGroup();
        panelMain = new javax.swing.JPanel();
        panelRead = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRead = new javax.swing.JTable();
        btnReadNew = new javax.swing.JButton();
        btnReadView = new javax.swing.JButton();
        btnReadDelete = new javax.swing.JButton();
        panelEdit = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEditId = new javax.swing.JTextField();
        txtEditName = new javax.swing.JTextField();
        txtEditMedia = new javax.swing.JTextField();
        txtEditPlatform = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEditSinopse = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnEditSave = new javax.swing.JButton();
        btnEditRestore = new javax.swing.JButton();
        btnEditBack = new javax.swing.JButton();
        txtEditType = new javax.swing.JTextField();
        checkboxEditStatusOn = new javax.swing.JCheckBox();
        checkboxEditStatusOff = new javax.swing.JCheckBox();
        panelView = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btnViewBack = new javax.swing.JButton();
        btnViewEdit = new javax.swing.JButton();
        txtViewId = new javax.swing.JTextField();
        txtViewType = new javax.swing.JTextField();
        txtViewName = new javax.swing.JTextField();
        txtViewPlatform = new javax.swing.JTextField();
        txtViewMedia = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtViewSinopse = new javax.swing.JTextPane();
        btnViewDelete = new javax.swing.JButton();
        txtViewDate = new javax.swing.JLabel();
        txtViewStatus = new javax.swing.JTextField();
        panelCreate = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCreateType = new javax.swing.JTextField();
        txtCreateName = new javax.swing.JTextField();
        txtCreatePlatform = new javax.swing.JTextField();
        txtCreateMedia = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtCreateSinopse = new javax.swing.JTextPane();
        btnCreateBack = new javax.swing.JButton();
        btnCreateSave = new javax.swing.JButton();
        btnCreateClear = new javax.swing.JButton();
        mnuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuListAll = new javax.swing.JMenuItem();
        mnuAdd = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuHelpSupport = new javax.swing.JMenuItem();
        mnuHelpUpdates = new javax.swing.JMenuItem();
        mnuHelpSite = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GameEX");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));

        panelMain.setLayout(new java.awt.CardLayout());

        panelRead.setBackground(new java.awt.Color(0, 71, 171));

        tableRead.setAutoCreateRowSorter(true);
        tableRead.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        tableRead.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Nome", "Plataforma", "MÃ­dia", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRead.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        tableRead.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableRead.getTableHeader().setResizingAllowed(false);
        tableRead.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableRead);
        if (tableRead.getColumnModel().getColumnCount() > 0) {
            tableRead.getColumnModel().getColumn(0).setMinWidth(50);
            tableRead.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableRead.getColumnModel().getColumn(1).setMinWidth(100);
            tableRead.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableRead.getColumnModel().getColumn(2).setMinWidth(200);
            tableRead.getColumnModel().getColumn(2).setPreferredWidth(200);
            tableRead.getColumnModel().getColumn(3).setMinWidth(100);
            tableRead.getColumnModel().getColumn(3).setPreferredWidth(100);
            tableRead.getColumnModel().getColumn(4).setMinWidth(100);
            tableRead.getColumnModel().getColumn(4).setPreferredWidth(100);
            tableRead.getColumnModel().getColumn(5).setMinWidth(50);
            tableRead.getColumnModel().getColumn(5).setPreferredWidth(50);
        }

        btnReadNew.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnReadNew.setText("Novo!");
        btnReadNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadNewActionPerformed(evt);
            }
        });

        btnReadView.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnReadView.setText("Visualizar Selecionado");
        btnReadView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadViewActionPerformed(evt);
            }
        });

        btnReadDelete.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnReadDelete.setText("Deletar Selecionado");
        btnReadDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelReadLayout = new javax.swing.GroupLayout(panelRead);
        panelRead.setLayout(panelReadLayout);
        panelReadLayout.setHorizontalGroup(
            panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                    .addGroup(panelReadLayout.createSequentialGroup()
                        .addComponent(btnReadNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReadDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReadView, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelReadLayout.setVerticalGroup(
            panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReadLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnReadView, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReadDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnReadNew, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnReadNew.getAccessibleContext().setAccessibleName("");
        btnReadView.getAccessibleContext().setAccessibleName("");

        panelMain.add(panelRead, "panelRead");

        panelEdit.setBackground(new java.awt.Color(0, 71, 171));
        panelEdit.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Editar Registro:");

        txtEditId.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtEditName.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txtEditName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditNameActionPerformed(evt);
            }
        });

        txtEditMedia.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtEditPlatform.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtEditSinopse.setColumns(20);
        txtEditSinopse.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txtEditSinopse.setRows(5);
        jScrollPane2.setViewportView(txtEditSinopse);

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tipo:");

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Plataforma:");

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nome:");

        jLabel6.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("MÃ­dia:");

        jLabel7.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Status:");

        jLabel8.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Sinopse:");

        btnEditSave.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEditSave.setText("Salvar");
        btnEditSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditSaveActionPerformed(evt);
            }
        });

        btnEditRestore.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEditRestore.setText("Restaurar");
        btnEditRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRestoreActionPerformed(evt);
            }
        });

        btnEditBack.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEditBack.setText("Voltar");
        btnEditBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditBackActionPerformed(evt);
            }
        });

        txtEditType.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        checkboxEditStatusOn.setBackground(new java.awt.Color(255, 255, 255));
        groupBtnStatus.add(checkboxEditStatusOn);
        checkboxEditStatusOn.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        checkboxEditStatusOn.setText("on");

        checkboxEditStatusOff.setBackground(new java.awt.Color(255, 255, 255));
        groupBtnStatus.add(checkboxEditStatusOff);
        checkboxEditStatusOff.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        checkboxEditStatusOff.setText("off");
        checkboxEditStatusOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxEditStatusOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditLayout = new javax.swing.GroupLayout(panelEdit);
        panelEdit.setLayout(panelEditLayout);
        panelEditLayout.setHorizontalGroup(
            panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditLayout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelEditLayout.createSequentialGroup()
                        .addComponent(txtEditId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(checkboxEditStatusOn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkboxEditStatusOff, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(txtEditName)
                    .addComponent(txtEditPlatform)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditLayout.createSequentialGroup()
                        .addComponent(btnEditSave, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditRestore))
                    .addComponent(jScrollPane2)
                    .addComponent(txtEditMedia)
                    .addComponent(txtEditType, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(203, Short.MAX_VALUE))
            .addGroup(panelEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEditBack, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelEditLayout.setVerticalGroup(
            panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(checkboxEditStatusOn)
                    .addComponent(checkboxEditStatusOff))
                .addGap(8, 8, 8)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEditType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(panelEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(btnEditBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelMain.add(panelEdit, "panelEdit");

        panelView.setBackground(new java.awt.Color(0, 71, 171));
        panelView.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Visualizar Registro:");

        jLabel17.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("ID:");

        jLabel18.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Tipo:");

        jLabel19.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Nome:");

        jLabel20.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Plataform:");

        jLabel21.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("MÃ­dia:");

        jLabel22.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Sinopse:");

        jLabel23.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Status:");

        btnViewBack.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnViewBack.setText("Voltar");
        btnViewBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBackActionPerformed(evt);
            }
        });

        btnViewEdit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnViewEdit.setText("Editar");
        btnViewEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEditActionPerformed(evt);
            }
        });

        txtViewId.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txtViewId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewIdActionPerformed(evt);
            }
        });

        txtViewType.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txtViewType.setMaximumSize(new java.awt.Dimension(295, 2147483647));
        txtViewType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewTypeActionPerformed(evt);
            }
        });

        txtViewName.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtViewPlatform.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtViewMedia.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtViewSinopse.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(txtViewSinopse);

        btnViewDelete.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnViewDelete.setText("Deletar");
        btnViewDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDeleteActionPerformed(evt);
            }
        });

        txtViewDate.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        txtViewDate.setForeground(new java.awt.Color(255, 255, 255));
        txtViewDate.setText("Data e Hora do registro: ");

        txtViewStatus.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txtViewStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtViewStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelViewLayout = new javax.swing.GroupLayout(panelView);
        panelView.setLayout(panelViewLayout);
        panelViewLayout.setHorizontalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addContainerGap(183, Short.MAX_VALUE)
                        .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelViewLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelViewLayout.createSequentialGroup()
                                        .addComponent(txtViewId, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(86, 86, 86)
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtViewStatus))
                                    .addComponent(txtViewType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(panelViewLayout.createSequentialGroup()
                                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtViewPlatform)
                                    .addComponent(txtViewMedia)
                                    .addComponent(jScrollPane3)
                                    .addGroup(panelViewLayout.createSequentialGroup()
                                        .addComponent(btnViewEdit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                                        .addComponent(btnViewDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtViewName)))
                            .addGroup(panelViewLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtViewDate)))))
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnViewBack, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 219, Short.MAX_VALUE))
        );
        panelViewLayout.setVerticalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtViewDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtViewId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel23)
                    .addComponent(txtViewStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtViewType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtViewName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtViewPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtViewMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(btnViewBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelMain.add(panelView, "panelView");

        panelCreate.setBackground(new java.awt.Color(0, 71, 171));

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Novo Registro:");

        jLabel11.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/avisoIcon.png"))); // NOI18N
        jLabel11.setText("Todos os campos devem ser preenchidos.");

        txtCreateType.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtCreateName.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtCreatePlatform.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txtCreatePlatform.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreatePlatformActionPerformed(evt);
            }
        });

        txtCreateMedia.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Tipo:");

        jLabel13.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Nome:");

        jLabel14.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Plataforma:");

        jLabel15.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("MÃ­dia:");

        jLabel16.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Sinopse:");

        txtCreateSinopse.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jScrollPane4.setViewportView(txtCreateSinopse);

        btnCreateBack.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnCreateBack.setText("Voltar");
        btnCreateBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateBackActionPerformed(evt);
            }
        });

        btnCreateSave.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnCreateSave.setText("Salvar");
        btnCreateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSaveActionPerformed(evt);
            }
        });

        btnCreateClear.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnCreateClear.setText("Limpar");
        btnCreateClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCreateLayout = new javax.swing.GroupLayout(panelCreate);
        panelCreate.setLayout(panelCreateLayout);
        panelCreateLayout.setHorizontalGroup(
            panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCreateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCreateBack, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCreateLayout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCreateLayout.createSequentialGroup()
                        .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCreateMedia)
                            .addComponent(txtCreateType, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCreateName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCreatePlatform, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelCreateLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCreateClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane4)
                            .addComponent(btnCreateSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCreateLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel11)))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        panelCreateLayout.setVerticalGroup(
            panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCreateLayout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateClear)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreatePlatform, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCreateMedia, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreateSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnCreateBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelMain.add(panelCreate, "panelCreate");

        mnuFile.setText("Arquivo");

        mnuListAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mnuListAll.setText("Listar todos...");
        mnuListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuListAllActionPerformed(evt);
            }
        });
        mnuFile.add(mnuListAll);

        mnuAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mnuAdd.setText("Novo...");
        mnuAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAddActionPerformed(evt);
            }
        });
        mnuFile.add(mnuAdd);

        mnuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnuExit.setText("Sair");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExit);

        mnuBar.add(mnuFile);

        mnuHelp.setText("Ajuda");

        mnuHelpSupport.setText("Suporte");
        mnuHelp.add(mnuHelpSupport);

        mnuHelpUpdates.setText("AtualizaÃ§Ãµes");
        mnuHelp.add(mnuHelpUpdates);

        mnuHelpSite.setText("Site");
        mnuHelp.add(mnuHelpSite);

        mnuBar.add(mnuHelp);

        setJMenuBar(mnuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(794, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuListAllActionPerformed
        openCard("panelRead");
    }//GEN-LAST:event_mnuListAllActionPerformed

    private void mnuAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAddActionPerformed
        openCard("panelCreate");
    }//GEN-LAST:event_mnuAddActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        exitApp();
    }//GEN-LAST:event_mnuExitActionPerformed

    private void btnReadNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadNewActionPerformed
        openCard("panelCreate");
    }//GEN-LAST:event_btnReadNewActionPerformed

    private void btnReadViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadViewActionPerformed
        loadSelected("view");
    }//GEN-LAST:event_btnReadViewActionPerformed

    private void txtEditNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditNameActionPerformed

    private void txtCreatePlatformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreatePlatformActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreatePlatformActionPerformed

    private void btnCreateBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateBackActionPerformed
        openCard("panelRead");
    }//GEN-LAST:event_btnCreateBackActionPerformed

    private void btnReadDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadDeleteActionPerformed
        int selected = tableRead.getSelectedRow();
        if (selected < 0) {
            PopUps.showAlert("Selecione um item primeiro.");
        } else {
            // Capta o id da linha selecionada
            int selectedId = (int) tableRead.getModel().getValueAt(selected, 0);
            deleteData(selectedId);
        }
    }//GEN-LAST:event_btnReadDeleteActionPerformed

    private void btnViewEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEditActionPerformed
        loadSelected("edit");
    }//GEN-LAST:event_btnViewEditActionPerformed

    private void checkboxEditStatusOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxEditStatusOffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxEditStatusOffActionPerformed

    private void btnViewDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDeleteActionPerformed
        int dataId = Integer.parseInt(txtViewId.getText());
        deleteData(dataId);
    }//GEN-LAST:event_btnViewDeleteActionPerformed

    private void btnViewBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBackActionPerformed
        openCard("panelRead");
    }//GEN-LAST:event_btnViewBackActionPerformed

    private void btnEditSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditSaveActionPerformed
        updateData();
    }//GEN-LAST:event_btnEditSaveActionPerformed

    private void btnEditRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRestoreActionPerformed
        int dataId = Integer.parseInt(txtEditId.getText());
        formRefresh(dataId);
    }//GEN-LAST:event_btnEditRestoreActionPerformed

    private void btnEditBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditBackActionPerformed
        openCard("panelRead");
    }//GEN-LAST:event_btnEditBackActionPerformed

    private void btnCreateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSaveActionPerformed
        createData();
    }//GEN-LAST:event_btnCreateSaveActionPerformed

    private void btnCreateClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateClearActionPerformed
        formClear();
    }//GEN-LAST:event_btnCreateClearActionPerformed

    private void txtViewStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewStatusActionPerformed

    private void txtViewIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewIdActionPerformed

    private void txtViewTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtViewTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtViewTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new View().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateBack;
    private javax.swing.JButton btnCreateClear;
    private javax.swing.JButton btnCreateSave;
    private javax.swing.JButton btnEditBack;
    private javax.swing.JButton btnEditRestore;
    private javax.swing.JButton btnEditSave;
    private javax.swing.JButton btnReadDelete;
    private javax.swing.JButton btnReadNew;
    private javax.swing.JButton btnReadView;
    private javax.swing.JButton btnViewBack;
    private javax.swing.JButton btnViewDelete;
    private javax.swing.JButton btnViewEdit;
    private javax.swing.JCheckBox checkboxEditStatusOff;
    private javax.swing.JCheckBox checkboxEditStatusOn;
    private javax.swing.ButtonGroup groupBtnStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuItem mnuAdd;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuHelpSite;
    private javax.swing.JMenuItem mnuHelpSupport;
    private javax.swing.JMenuItem mnuHelpUpdates;
    private javax.swing.JMenuItem mnuListAll;
    private javax.swing.JPanel panelCreate;
    private javax.swing.JPanel panelEdit;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelRead;
    private javax.swing.JPanel panelView;
    private javax.swing.JTable tableRead;
    private javax.swing.JTextField txtCreateMedia;
    private javax.swing.JTextField txtCreateName;
    private javax.swing.JTextField txtCreatePlatform;
    private javax.swing.JTextPane txtCreateSinopse;
    private javax.swing.JTextField txtCreateType;
    private javax.swing.JTextField txtEditId;
    private javax.swing.JTextField txtEditMedia;
    private javax.swing.JTextField txtEditName;
    private javax.swing.JTextField txtEditPlatform;
    private javax.swing.JTextArea txtEditSinopse;
    private javax.swing.JTextField txtEditType;
    private javax.swing.JLabel txtViewDate;
    private javax.swing.JTextField txtViewId;
    private javax.swing.JTextField txtViewMedia;
    private javax.swing.JTextField txtViewName;
    private javax.swing.JTextField txtViewPlatform;
    private javax.swing.JTextPane txtViewSinopse;
    private javax.swing.JTextField txtViewStatus;
    private javax.swing.JTextField txtViewType;
    // End of variables declaration//GEN-END:variables

    public void openCard(String cardName) {
        CardLayout card = (CardLayout) panelMain.getLayout();
        card.show(panelMain, cardName);
    }

    private void readAll() {
        try {
            DefaultTableModel tableModel = (DefaultTableModel) tableRead.getModel();

            // Apaga as linhas da tabela
            tableModel.setNumRows(0);

            // Conecta ao banco
            conn = dbConnection.connect();
            String sql = "SELECT g_id, g_type, g_name, g_platform, g_media, g_status FROM game WHERE g_status != 'del'";

            // Prepara, filtra e sanitiza o SQL e depois executa
            pstm = conn.prepareStatement(sql);
            res = pstm.executeQuery();

            while (res.next()) {
                tableModel.addRow(new Object[]{
                    res.getInt("g_id"),
                    res.getString("g_type"),
                    res.getString("g_name"),
                    res.getString("g_platform"),
                    res.getString("g_media"),
                    res.getString("g_status")
                });
            }
        } catch (SQLException error) {
            PopUps.showError("Main.readAll\n" + error);
        } finally {
            dbConnection.dbClose(conn, pstm, res);
        }
    }

    private void loadSelected(String action) {
        try {
            int selected = tableRead.getSelectedRow();
            if (selected < 0) {
                PopUps.showAlert("Selecione um item primeiro.");
            } else {
                // Capta o id da linha selecionada
                int selectedId = (int) tableRead.getModel().getValueAt(selected, 0);
                String sql = "SELECT * FROM game WHERE g_id = ? AND g_status != 'del'";

                // Conecta ao banco de dados
                conn = dbConnection.connect();

                // Prepara, filtra e sanitiza o SQL e dps executa
                pstm = conn.prepareStatement(sql);

                // Substitui o "?" na query pelo Id do registro
                pstm.setInt(1, selectedId);

                // Executa a query e armazena resultado(s) em res
                res = pstm.executeQuery();

                // Carrega o mÃ©todo correto de acordo com a aÃ§Ã£o escolhida â action
                switch (action) {
                    case "view" ->
                        viewData(res);
                    case "edit" ->
                        editData(res);
                    default ->
                        PopUps.showAlert("Nenhum registro foi selecinado.");
                }
            }
        } catch (SQLException error) {
            PopUps.showError("Main.loadSelected\n" + error);
        } finally {
            dbConnection.dbClose(conn, pstm, res);
        }
    }

    private void viewData(ResultSet res) {
        // Desabilita os campos...
        txtViewStatus.setEditable(false);
        txtViewId.setEditable(false);
        txtViewType.setEditable(false);
        txtViewName.setEditable(false);
        txtViewPlatform.setEditable(false);
        txtViewMedia.setEditable(false);
        txtViewSinopse.setEditable(false);

        try {
            res.next();
            txtViewId.setText(res.getString("g_id"));
            String txtDateView = "Data e Hora de registro: ";
            txtViewDate.setText(txtDateView + "[" + res.getString("g_date") + "]");
            txtViewType.setText(res.getString("g_type"));
            txtViewName.setText(res.getString("g_name"));
            txtViewPlatform.setText(res.getString("g_platform"));
            txtViewMedia.setText(res.getString("g_media"));
            txtViewSinopse.setText(res.getString("g_sinopse"));
            txtViewStatus.setText(res.getString("g_status"));
            
            // Verifica o status do registro e seleciona o checkbox respectivo
            if(!res.getString("g_status").equals("on")) {
                checkboxEditStatusOff.setSelected(true);
            } else {
                checkboxEditStatusOn.setSelected(true);
            }
            openCard("panelView");

        } catch (SQLException error) {
            PopUps.showError("Main.viewData\n" + error);
        } finally {
            dbConnection.dbClose(null, null, res);
        }
    }

    private void editData(ResultSet res) {
        // Desabilita o campo ID
        txtEditId.setEditable(false);
        try {
            res.next();
            txtEditId.setText(res.getString("g_id"));
            txtEditType.setText(res.getString("g_type"));
            txtEditName.setText(res.getString("g_name"));
            txtEditPlatform.setText(res.getString("g_platform"));
            txtEditMedia.setText(res.getString("g_media"));
            txtEditSinopse.setText(res.getString("g_sinopse"));

            openCard("panelEdit");

        } catch (SQLException error) {
            PopUps.showError("Main.editData\n" + error);
        } finally {
            dbConnection.dbClose(null, null, res);
        }
    }

    private void deleteData(int dataId) {
        int liabilityContract = PopUps.showConfirm("Oooops!", "Deseja Excluir esse registro?");
        if (liabilityContract == 0) {
            liabilityContract = PopUps.showConfirmAlert("Realmente Deseja excluir esse registro.\nIsso SerÃ¡ permanente! Isto Ã© sem volta!\nAo clicar em proseguir automaticamente vocÃª assina o termo de responsabilidade...\nIsto Ã© qualquer problema gerado por conta da exclusÃ£o desse dado cabe apenas a vocÃª!");
        }

        if (liabilityContract == 0) {
            try {
                String sql = "UPDATE game SET g_status = 'del' WHERE g_id = ?";

                // Conecta ao banco de dados
                conn = dbConnection.connect();

                // Prepara, filtra e sanitiza o SQL e depois executa
                pstm = conn.prepareStatement(sql);
                // Substitui "?" pelo id do registro
                pstm.setInt(1, dataId);
                pstm.executeUpdate();

                // Atualiza a listagem de registros e volta para panelRead
                readAll();
                openCard("panelRead");

            } catch (SQLException error) {
                PopUps.showError("Main.deleteData\n" + error);
            } finally {
                dbConnection.dbClose(conn, pstm, null);
            }
        }
    }

    public void updateData() {
        int dialogButton = PopUps.showConfirm("ConfirmaÃ§Ã£o:", "Deseja salvar as alteraÃ§Ãµes?");

        if (dialogButton == 0) {
            try {
                String sql = "UPDATE game SET g_type = ?, g_name = ?, g_platform = ?, g_media = ?, g_sinopse = ?, g_status = ? WHERE g_id = ?";

                // Conecta com o banco de dados
                conn = dbConnection.connect();

                // Prepara, filtra e sanitiza o sql e depois executa a query
                pstm = conn.prepareStatement(sql);

                // Substitui os "?" no SQL pelos valores corretos
                pstm.setString(7, txtEditId.getText());
                pstm.setString(1, txtEditType.getText());
                pstm.setString(2, txtEditName.getText());
                pstm.setString(3, txtEditPlatform.getText());
                pstm.setString(4, txtEditMedia.getText());
                pstm.setString(5, txtEditSinopse.getText());

                if (checkboxEditStatusOn.getSelectedObjects() != null) {
                    pstm.setString(6, "on");
                } else if (checkboxEditStatusOff != null) {
                    pstm.setString(6, "off");
                }

                pstm.executeUpdate();

                // Atualiza a listagem de registros e volta para panelRead
                readAll();
                openCard("panelRead");

            } catch (SQLException error) {
                PopUps.showError("Main.deleteData\n" + error);
            } finally {
                dbConnection.dbClose(conn, pstm, null);
            }
        }
    }

    public void exitApp() {
        int dialogButton = PopUps.showConfirm("Saindo...", "Sair do aplicativo?");

        if (dialogButton == 0) {
            System.exit(0);
        }
    }

    public void formRefresh(int dataId) {
        try {
            String sql = "SELECT * FROM game WHERE g_id = ? AND g_status != 'del'";

            // Conecta ao banco de dados
            conn = dbConnection.connect();

            // Prepara, filtra e sanitiza o SQL e dps executa
            pstm = conn.prepareStatement(sql);

            // Substitui o "?" na query pelo Id do registro
            pstm.setInt(1, dataId);

            // Executa a query e armazena resultado(s) em res
            res = pstm.executeQuery();
            res.next();

            txtEditId.setText(res.getString("g_id"));
            txtEditType.setText(res.getString("g_type"));
            txtEditName.setText(res.getString("g_name"));
            txtEditPlatform.setText(res.getString("g_platform"));
            txtEditMedia.setText(res.getString("g_media"));
            txtEditSinopse.setText(res.getString("g_sinopse"));
            
            // Verifica o status do registro e seleciona o checkbox respectivo
            if(!res.getString("g_status").equals("on")) {
                checkboxEditStatusOff.setSelected(true);
            } else {
                checkboxEditStatusOn.setSelected(true);
            }
        } catch (SQLException error) {
            PopUps.showError("Main.refresh\n" + error);
        } finally {
            dbConnection.dbClose(conn, pstm, res);
        }
    }

    public void formClear() {
        txtCreateType.setText("");
        txtCreateName.setText("");
        txtCreatePlatform.setText("");
        txtCreateMedia.setText("");
        txtCreateSinopse.setText("");
    }

    public void createData() {
        try {
            String sql = "INSERT INTO game(g_date, g_type, g_name, g_platform, g_media, g_sinopse, g_status) VALUES (?, ?, ?, ?, ?, ?, 'on')";

            // Conecta ao banco de dados
            conn = dbConnection.connect();

            // Prepara, filtra e sanitiza o sql e depois executa a query
            pstm = conn.prepareStatement(sql);

            // Captar a data e a hora do registro
            String localDate = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(new Date());
            
            // Substitui os "?" no SQL pelos valores corretos
            pstm.setString(1, localDate);
            pstm.setString(2, txtCreateType.getText());
            pstm.setString(3, txtCreateName.getText());
            pstm.setString(4, txtCreatePlatform.getText());
            pstm.setString(5, txtCreateMedia.getText());
            pstm.setString(6, txtCreateSinopse.getText());

            // Executa, filta e sanitiza o sql e depois executa a query
            pstm.executeUpdate();
            
            // Limpa os campos
            formClear();

            // Atualiza a listagem de registros e volta para o panelRead
            readAll();
            openCard("panelRead");

        } catch (SQLException error) {
            PopUps.showError("Main.CreateData\n" + error);
        } finally {
            dbConnection.dbClose(conn, pstm, null);
        }
    }
}
